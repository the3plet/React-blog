{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setisPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortConst = new AbortController();\n    fetch(url, {\n      signal: abortConst.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"could not produce the data\");\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setisPending(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log(\"Fetch connot be carried out\");\n      } else {\n        SetisP;\n      }\n      setError(err.message);\n      setisPending(false);\n    });\n    return () => {\n      abortConst.abort();\n    };\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"Udn27xz+VSb/DLDWG5c03dB5Qgs=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isPending","setisPending","error","setError","abortConst","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","SetisP","message","abort"],"sources":["/home/sooraj/Code Space/React-blog/src/useFetch.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\n\nconst useFetch=(url)=>{\n    const [data, setData] = useState(null);\n    const [isPending, setisPending] = useState(true);\n    const [error, setError] = useState(null);\n  \n\n    useEffect(() => {\n      const abortConst= new AbortController();\n\n        fetch(url,{signal: abortConst.signal})\n          .then((res) => {\n            if (!res.ok) {\n              throw Error(\"could not produce the data\");\n            }\n    \n            return res.json();\n          })\n          .then((data) => {\n            setData(data);\n            setisPending(false);\n            setError(null);\n          })\n          .catch((err) => {\n            if (err.name ==='AbortError') {\n              console.log(\"Fetch connot be carried out\")\n            }else{\n              SetisP\n            }\n            setError(err.message);\n            setisPending(false);\n          });\n\n          return()=>{\n            abortConst.abort();\n          }\n      }, [url]);\n      return{data,isPending,error}\n}\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAE1C,MAAMC,QAAQ,GAAEC,GAAG,IAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAGxCC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAE,IAAIC,eAAe,EAAE;IAErCC,KAAK,CAACV,GAAG,EAAC;MAACW,MAAM,EAAEH,UAAU,CAACG;IAAM,CAAC,CAAC,CACnCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC3C;MAEA,OAAOF,GAAG,CAACG,IAAI,EAAE;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEV,IAAI,IAAK;MACdC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDU,KAAK,CAAEC,GAAG,IAAK;MACd,IAAIA,GAAG,CAACC,IAAI,KAAI,YAAY,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC5C,CAAC,MAAI;QACHC,MAAM;MACR;MACAf,QAAQ,CAACW,GAAG,CAACK,OAAO,CAAC;MACrBlB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEF,OAAM,MAAI;MACRG,UAAU,CAACgB,KAAK,EAAE;IACpB,CAAC;EACL,CAAC,EAAE,CAACxB,GAAG,CAAC,CAAC;EACT,OAAM;IAACE,IAAI;IAACE,SAAS;IAACE;EAAK,CAAC;AAClC,CAAC;AAAAL,EAAA,CArCKF,QAAQ;AAsCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}